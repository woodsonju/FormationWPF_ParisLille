<Window x:Class="WPF1Window.MiseEnForme.WindowResource"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF1Window.MiseEnForme"
        mc:Ignorable="d"
        Title="WindowResource" Height="300" Width="300">
    <Window.Resources>
        <!--On attribut à la ressource (type SolidColorBrush) une clé ainsi on pourra le referencer; l'utiliser
        au niveau de notre fenêtre (dans un contrôle Button  par exemple)-->
        <SolidColorBrush x:Key="BackgroundBrush" Color="coral" />
        <SolidColorBrush x:Key="BackgroundBrushDyn"  Color="Aquamarine"/>
    </Window.Resources>
    <Grid>
        <!--
            Avec les Ressources : 
                WPF introduit le concept très pratique permettant de sauvegarder des données en tant que ressource, 
                soit localement au niveau du contrôle, ou de la fenêtre ou encore globalement au niveau de l'application
                entière. 
                Avec les ressources, on peut placer des données dans un endroit spécifique et les utiliser ensuite.
                Ce concept est beaucoup utilisé pour les "Styles" et les "Templates"
                Comprendre les ressources nous permettra de réutiliser des objets tels que les Styles et les Templates
        
                Il existe deux types de ressrouces que nous allons voir ici : 
                    - RESSOURCES STATIQUE : 
                        Les ressources statiques sont les ressources que vous ne pouvez pas manipuler au moment de l'éxecution.
                        Les ressources statiques ne sont évaluées qu'une seule fois par l'élément qui les références 
                        lors du chargement de XAML.
                    - RESSOURCE DYNAMIQUE
                        Les ressources dynamiques sont les ressources que vous pouvez manipuler  et 
                         évaluées au moment de l'execution. 
                        Si votre code behind modifie la ressource, les éléments faisant référence aux ressources en tant 
                        que ressources dynamiques se chargeront également
                -->
        <Button Content="Res. statique" Height="23" Width="89" HorizontalAlignment="Left" VerticalAlignment="Top"
                Margin="12,12,0,0" Background="{StaticResource BackgroundBrush}"/>

        <Button Content="Res. Dynamique" Height="23" Width="89" HorizontalAlignment="Left" VerticalAlignment="Top"
                Margin="190,12,0,0" Background="{DynamicResource BackgroundBrushDyn}" 
                Name="btnDynamicRessource" Click="btnDynamicRessource_Click"/>
    </Grid>
</Window>
